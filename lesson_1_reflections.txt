How did viewing a diff between two versions of a file help you see the bug that was introduced?

It reduced the lines I had to read by a huge amount and made it easy to pinpoint the place that had the bug.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

you could easily compare working versions with altered versions to see what the differences are. Other than that I would have to think about it for a lot longer than I can at the moment, so I'm going to leave it at that.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

One is an advantage for forgetful people like me who don't remember to save ever and end up losing hours of work. The manual way is for clever people.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

because Git is used for projects that could span multiple files whereas the other ones tend to be for programs that work with one file at a time

How can you use the commands git log and git diff to view the history of files?

The way I just did, you type the thingy's in the thingy and then it does thingy's. This really isn't the question that should be asked.

How might using version control make you more confident to make changes that could break something?

You can always go back to a previous commit if something breaks in a new one.

Now that you have your workspace set up, what do you want to try using Git for?

Programming shit